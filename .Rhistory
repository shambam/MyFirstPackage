m[3,1] <- "Gfi1b"
m[3,2] <- "Epo"
m
as.data.frame(m)
m
dm <- as.data.frame(m)
dm
graph_from_data_frame(dm)
plot(graph_from_data_frame(dm))
dm[4,]
dm[4,1] <- "Gata1"
dm[4,2] <- "Epo"
plot(graph_from_data_frame(dm))
dm
g <- graph_from_data.frm(dm)
g <- graph_from_data.frame(dm)
g <- graph_from_data_frame(dm)
g
V(g)
names(V(g))
layout_nicely(g)
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
install.packages("devtools")
install.packages("devtools")
install.packages("rgl")
library(rgl)
install.packages("rgl")
rnorm(100)
matrix(rnorm(100),ncol=5)
m <- matrix(rnorm(100),ncol=5)
prcomp(m)
names(prcomp(m))
rprcomp(m)
pr rcomp(m)
pr <-prcomp(m)
pr
pr$sdev
pr$sdev^2
pr$sdev^2[1:2]
(pr$sdev^2)[1:2]
install.packages("EMD")
library(EMD)
ndata <- 3000
tt2 <- seq(0, 9, length = ndata)
xt2 <- sin(pi * tt2) + sin(2* pi * tt2) + sin(6 * pi * tt2) + 0.5 * tt2
try <- emd(xt2, tt2, boundary = "wave")
### Ploting the IMF's
xt2
plot(xt2,yt2)
plot(xt2)
plot(xt2,tt2)
plot(tt2,xt2)
try <- emd(xt2, tt2, boundary = "wave")
try
names(try)
par(mfrow = c(try$nimf + 1, 1), mar=c(2,1,2,1))
rangeimf <- range(try$imf)
for(i in 1:try$nimf) {
plot(tt2, try$imf[,i], type="l", xlab="", ylab="", ylim=rangeimf, main=paste(i, "-th IMF", sep="")); abline(h=0)
}
plot(tt2,xt2)
names(try)
try$imf[1,]
ls()
library(SCnorm)
library(Seurat)
library(stringr)
library(gplots)
library(DDRTree)
bcell.data <- Read10X(data.dir = "/Users/shamit/Documents/Tina_10X_corrected/outs/filtered_gene_bc_matrices_mex/mm10")
bcell <- CreateSeuratObject(raw.data = bcell.data, min.cells = 3, min.genes = 200, project = "BCELL")
mito.genes <- grep(pattern = "^mt-", x = rownames(x = bcell@data), value = TRUE)
percent.mito <- Matrix::colSums(bcell@raw.data[mito.genes, ])/Matrix::colSums(bcell@raw.data)
bcell <- AddMetaData(object = bcell, metadata = percent.mito, col.name = "percent.mito")
# AddMetaData adds columns to object@meta.data, and is a great place to
# stash QC stats
#bcell <- AddMetaData(object = hif, metadata = percent.mito, col.name = "percent.mito")
#VlnPlot(object = bcell, features.plot = c("nGene", "nUMI"), nCol = 3)
#par(mfrow = c(1, 2))
#GenePlot(object = bcell, gene1 = "nUMI", gene2 = "percent.mito")
#GenePlot(object = bcell, gene1 = "nUMI", gene2 = "nGene")
#bcell <- FilterCells(object = bcell, subset.names = c("nGene"),low.thresholds = c(2000), high.thresholds = c(4500))
bcell <- FilterCells(object = bcell, subset.names = c("nGene", "percent.mito","nUMI"), low.thresholds = c(1000, -Inf,3500), high.thresholds = c(5000, 0.05,Inf))
changeIdent <- function(seuratObj,new.idents){
new.ids <- rep("",length(seuratObj@cell.names))
for(i in 1:length(new.idents)){
new.ids[grep(as.character(-i),seuratObj@cell.names)] <- new.idents[i]
}
seuratObj<- SetIdent(seuratObj,ident.use=new.ids)
seuratObj
}
bcell <- changeIdent(bcell,c("CLP","FrA","ProB"))
bcell@ident
dim(bcell@data)
checkCountDepth(Data = bcell@data, Conditions = bcell@ident,FilterCellProportion = .1, FilterExpression = 2)
library(SCnorm)
checkCountDepth(Data = bcell@data, Conditions = bcell@ident,FilterCellProportion = .1, FilterExpression = 2)
source("https://bioconductor.org/biocLite.R")
biocLite("SCnorm")
source("https://bioconductor.org/biocLite.R")
biocLite("SCnorm")
library(SCnorm)
library(devtools)
devtools::install_github("rhondabacher/SCnorm")
detach("package:SCnorm", unload=TRUE)
library("SCnorm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
remove.packages("SCnorm")
source("https://bioconductor.org/biocLite.R")
biocLite("SCnorm")
library(devtools)
devtools::install_github("rhondabacher/SCnorm", ref="devel")
source("https://bioconductor.org/biocLite.R")
biocLite("SCnorm")
source("https://bioconductor.org/biocLite.R")
biocLite("SCnorm")
q()
source("https://bioconductor.org/biocLite.R")
biocLite("SCnorm")
install.packages("~/Downloads/SCnorm_1.0.0.tar.gz", repos = NULL, type = "source")
library(Seurat)
library(stringr)
library(gplots)
library(DDRTree)
bcell.data <- Read10X(data.dir = "/Users/shamit/Documents/Tina_10X_corrected/outs/filtered_gene_bc_matrices_mex/mm10")
bcell <- CreateSeuratObject(raw.data = bcell.data, min.cells = 3, min.genes = 200, project = "BCELL")
mito.genes <- grep(pattern = "^mt-", x = rownames(x = bcell@data), value = TRUE)
percent.mito <- Matrix::colSums(bcell@raw.data[mito.genes, ])/Matrix::colSums(bcell@raw.data)
bcell <- AddMetaData(object = bcell, metadata = percent.mito, col.name = "percent.mito")
# AddMetaData adds columns to object@meta.data, and is a great place to
# stash QC stats
#bcell <- AddMetaData(object = hif, metadata = percent.mito, col.name = "percent.mito")
#VlnPlot(object = bcell, features.plot = c("nGene", "nUMI"), nCol = 3)
par(mfrow = c(1, 2))
#GenePlot(object = bcell, gene1 = "nUMI", gene2 = "percent.mito")
GenePlot(object = bcell, gene1 = "nUMI", gene2 = "nGene")
#bcell <- FilterCells(object = bcell, subset.names = c("nGene"),low.thresholds = c(2000), high.thresholds = c(4500))
bcell <- FilterCells(object = bcell, subset.names = c("nGene", "percent.mito"), low.thresholds = c(1000, -Inf), high.thresholds = c(5000, 0.05))
library(SCnorm)
checkCountDepth
DataNorm <- SCnorm(Data = bcell@data, Conditions= bcell@ident,PrintProgressPlots = TRUE,
FilterCellNum = 10,
PropToUse = .1,
Thresh = .1,
ditherCounts = TRUE)
gc()
q()
library(DESeq2)
rlogTransformation
args(rlogTransformation)
args(rlog)
library(phytools)
to.matrix("a","b","c","c","b","b","a")
to.matrix(c("a","b","c","c","b","b","a"))
to.matrix(c("a","b","c","c","b","b","a"),c("a","b","c"))
to.matrix(c("a","b","c","c","b","b","a"),unique(c("a","b","c","c","b","b","a")))
q()
d <- rnorm(200,ncol=10)
d <- matrix(rnorm(200),ncol=10))
d <- matrix(rnorm(200),ncol=10)
prcomp(t(d)
)
dp <- prcomp(t(d))
names(dp)
dp$x
dp$x[,1:2]
plot(dp$x[,1:2])
dim(d)
dp <- prcomp((d))
plot(dp$x[,1:2])
np <- rnorm(10)
np
scale(np, dp$center, dp$scale) %*% dp$rotation
np
dp$center
dp$center
dp$centerdp$rotation
dp$rotation
scale(np, dp$center, dp$scale) %*% dp$rotation
length(dp$center)
np <- matrix(rnorm(10),ncol=10)
np
scale(np, dp$center, dp$scale) %*% dp$rotation
scale(np, dp$center, dp$scale) %*% dp$rotation
scale(np, dp$center, dp$scale) %*% dp$rotation[1:2]
(scale(np, dp$center, dp$scale) %*% dp$rotation)[1:2]
scale(np, dp$center, dp$scale) %*% dp$rotation
points((scale(np, dp$center, dp$scale) %*% dp$rotation)[1:2])
plot(dp$x[,1:2])
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
nc
points(nc[1],nc[2])
points(nc[1],nc[2],col="red")
cor(d)
cor(t(d)
)
hclust(as.dist(1-cor(t(d))))
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(rbind(d,np))))$order
)
rbind(d,np)
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
text
args(text)
?text
text(dp$x[,1:2],labels=1:20)
plot(dp$x[,1:2],col=white)
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
dp <- prcomp(t(d))
plot(dp$x[,1:2],col=white)
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
dp <- prcomp(t(d))
plot(dp$x[,1:2],col=white)
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
dp <- prcomp(t(d))
plot(dp$x[,1:2],col=white)
text(dp$x[,1:2],labels=1:20)
plot(dp$x[,1:2])
d <- matrix(rnorm(200),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2])
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
dp <- prcomp(d)
#plot(dp$x[,1:2])
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
plot.new()
dp <- prcomp(d)
#plot(dp$x[,1:2])
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
plot.new()
dp <- prcomp(d)
#plot(dp$x[,1:2])
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
plot.new()
dp <- prcomp(d)
#plot(dp$x[,1:2])
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
plot.new()
dp <- prcomp(d)
#plot(dp$x[,1:2])
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
d <- matrix(rnorm(200),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))
plot(hclust(as.dist(1-cor(t(  rbind(d,np)   )))))
d <- matrix(rnorm(200),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
np <- matrix(rnorm(10),ncol=10)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))))$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))))$order
hclust
args(hclust)
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))),method="ward.D2")$order
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))),method="ward.D2")$order
plot(hclust(as.dist(1-cor(t(  rbind(d,np)   ))),method="ward.D2"))
plot(d[17,])
plot(d[21,])
points(np)
plot(d[21,])
plot(d[17,])
np
points(as.vector(np)
)
plot(d[17,])
points(as.vector(np),col="red")
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))),method="ward.D2")$order
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(  rbind(d,np)   ))),method="ward.D2")$order
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
d
scale(d)
scale(d)
names(scale(d))
scale(d)
scale(d)[1,]
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
plot(hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2"))
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
d <- matrix(rnorm(200),ncol=10)
np <- matrix(rnorm(10),ncol=10)
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
hclust(as.dist(1-cor(t(d))),method="ward.D2")$order
hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2")$order
plot(hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2"))
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
plot(hclust(as.dist(1-cor(t(rbind(d,np)))),method="ward.D2"))
dp <- prcomp(d)
plot(dp$x[,1:2],col="white")
text(dp$x[,1:2],labels=1:20)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
points(nc[1],nc[2],col="red")
getS3method("predict", "prcomp")
predict(dp,np)
nc <- scale(np, dp$center, dp$scale) %*% dp$rotation
nc
library(Seurat)
?FindAllMarkers
ls()
0.05/5
ls()
setwd("~/Documents/Rpackages/MyFirstPackage")
library(devtools)
install.packages(devtools)
install.packages("devtools")
install.packages("roxygen2")
library(devtools)
document()
#`Class defintion of an scell object
#`
#`The class takes a matrix of values and needs row and column names.
#'@exportClass scell
setClass("scell",slots=c(data="matrix",var.genes="character"))
document()
document()
document()
document()
check()
install()
document()
install()
library(pheatmap)
install.packages("pheamap")
install.packages("pheatmap")
library(pheatmap)
pheatmap()
?pheatmap
document()
install()
check()
install()
check()
document()
install()
document()
install()
document()
document()
document()
document()
install()
document()
install()
library(Rtsne)
install.packages("Rtsne")
?Rtsne
library(Rtsne)
?Rtsne
install.packages("rgl")
library(rgl)
document()
install()
document()
install()
